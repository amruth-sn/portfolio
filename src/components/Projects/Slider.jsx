import React, { useRef } from 'react'
import Slider from 'react-slick';
import Project from './Project';
import { IoIosArrowBack, IoIosArrowForward } from "react-icons/io";
import styled from 'styled-components';
import Image1 from "../../assets/ai-image.jpg";
import Image2 from "../../assets/youtube-and-earbuds.jpg";
import Image3 from "../../assets/liberty.jpg";
import Image4 from "../../assets/web.jpg";
import Image5 from "../../assets/sudoku.jpg";
import Image6 from "../../assets/sware.png";
import Image7 from "../../assets/pokemon.png";

let data = [
  {
    img: Image1,
    header: "OpenAI Video Script Generator",
    disc: "Takes in user input for a topic and outputs video titles with the potential to go viral using Python and the OpenAI API. The user can input these titles elsewhere to receive a script for such a video generated by GPT's Davinci LLM.",
    demo: true,
    code: true,
    link: "https://script-generator-openai.herokuapp.com/",
    source: "https://github.com/amruth-sn/openai-project",
  },
  {
    img: Image2,
    header: "TubeByte - YouTube to MP3 Converter",
    disc: "Full-stack project using Express/Node.js and React.js. YouTube video links are sent to an API and packaged as a downloadable .mp3 file. ",
    demo: true,
    code: true,
    link: "https://tubebyte.netlify.app/",
    source: "https://github.com/amruth-sn/tubebyte",
  },
  {
    img: Image3,
    header: "Multimodal Digital Clock",
    disc: "Using Verilog HDL, I developed a digital clock with timer, stopwatch, 12HR, and 24HR modes. The project features a graphical interface which is controlled via FPGA.",
    demo: false,
    code: true,
    link: "",
    source: "https://github.com/amruth-sn/multimodal_digital_clock",
  },
  {
    img: Image4,
    header: "Personal Portfolio Website",
    disc: "Using React.js, Email.js @ Browser, and CSS, I was able to develop a personal portfolio website with some styling inspiration from online sources.",
    demo: true,
    code: true,
    link: "https://amruthn.com",
    source: "https://github.com/amruth-sn/portfolio",
  },
  {
    img: Image7,
    header: "Command-Line Pok\u00E9mon Simulator",
    disc: "I programmed a Pok\u00E9mon Simulator that features a character moving on a grid with interactable NPCs, locations (Gyms/Centers), and items using object-oriented programming.",
    demo: false,
    code: true,
    link: "",
    source: "https://github.com/amruth-sn/cli-pokemon-simulator",
  },
  {
    img: Image5,
    header: "Sudoku Solver",
    demo: false,
    code: true,
    disc: "One of my first projects ever, this Java program takes in a user input in the form of an 9x9 grid and returns all possible solutions (or none at all) for a sudoku board.",
    link: "",
    source: "https://github.com/amruth-sn/sudoku-solver",
  },
  {
    img: Image6,
    header: "Coming Soon!",
    demo: false,
    code: false,
  },
];

var settings = {
    className: "center",
    centerMode: true,
    dots: false,
    infinite: true,
    speed: 500,
    slidesToShow: 3,
    slidesToScroll: 1,
    initialSlide: 0,
    arrows : false,
    responsive: [
      {
        breakpoint: 990,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
          infinite: true,
          dots: false,
          centerMode : false
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 2,
          initialSlide: 2,
          centerMode : false
        }
      },
      {
        breakpoint: 480,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          centerMode : false
        }
      }
    ]
  };
const SliderComp = () => {
  const arrowRef = useRef(null);
    let sliderProject = "";
    sliderProject = data.map((item, i) => (
        <Project item = {item} key={i}/>
    ))
  return (
    <Container>
      <Slider ref={arrowRef} {...settings}>
      {sliderProject}
      </Slider>
      <Buttons>
        <button 
        onClick={() => arrowRef.current.slickPrev()}
        className='back'><IoIosArrowBack/></button>
        <button 
        onClick={() => arrowRef.current.slickNext()}
        className='next'><IoIosArrowForward/></button>
      </Buttons>
    </Container>
  )
}

export default SliderComp;

const Container = styled.div`
  position: relative;
`

const Buttons = styled.div`
  button {
    width: 2rem;
    height: 2rem;
    background-color: rgba(255, 255, 255, 0.2);
    cursor: pointer;
    color: #f2542d;
    border: none;
    position: absolute;
    top: 45%;
    right: -2rem;
    :hover {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }

  .back {
    left: -2rem;
    :hover {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }
`;